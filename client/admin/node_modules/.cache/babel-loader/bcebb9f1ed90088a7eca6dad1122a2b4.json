{"remainingRequest":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/babel-loader/lib/index.js!/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/registerServiceWorker.js","dependencies":[{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/registerServiceWorker.js","mtime":1563202546367},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/cache-loader/dist/cjs.js","mtime":1563033657658},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/babel-loader/lib/index.js","mtime":1563033651329}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\n/* eslint-disable no-console */\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(\"\".concat(process.env.BASE_URL, \"service-worker.js\"), {\n    ready: function ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered: function registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached: function cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound: function updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated: function updated() {\n      console.log('New content is available; please refresh.');\n      var update = confirm('Доступно обновление. Нажмите \"ОК\" для перезагрузки');\n\n      if (update) {\n        //localStorage.clear()\n        //sessionStorage.clear()\n        caches.keys().then(function (cacheNames) {\n          cacheNames.forEach(function (cacheName) {\n            caches.delete(cacheName);\n          });\n        });\n        setTimeout(function () {\n          location.reload(true);\n        }, 300);\n      }\n    },\n    offline: function offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error: function error(_error) {\n      console.error('Error during service worker registration:', _error);\n      alert(_error);\n    }\n  });\n}\n/**\n * Detecting if your app is launched from the home screen\n */\n// Safari\n\n\nif (window.navigator.standalone === true) {\n  console.log('safari display-mode is standalone');\n} // Other\n\n\nif (window.matchMedia('(display-mode: standalone)').matches) {\n  console.log('display-mode is standalone');\n}",{"version":3,"sources":["/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/registerServiceWorker.js"],"names":["register","process","env","NODE_ENV","BASE_URL","ready","console","log","registered","cached","updatefound","updated","update","confirm","caches","keys","then","cacheNames","forEach","cacheName","delete","setTimeout","location","reload","offline","error","alert","window","navigator","standalone","matchMedia","matches"],"mappings":";;AAAA;AAEA,SAAQA,QAAR,QAAuB,yBAAvB;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,WAAIC,OAAO,CAACC,GAAR,CAAYE,QAAhB,wBAA6C;AACnDC,IAAAA,KADmD,mBAC1C;AACPC,MAAAA,OAAO,CAACC,GAAR,CACE,0DACA,+CAFF;AAID,KANkD;AAOnDC,IAAAA,UAPmD,wBAOrC;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,KATkD;AAUnDE,IAAAA,MAVmD,oBAUzC;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,KAZkD;AAanDG,IAAAA,WAbmD,yBAapC;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAfkD;AAgBnDI,IAAAA,OAhBmD,qBAgBxC;AAETL,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAEA,UAAMK,MAAM,GAAGC,OAAO,CAAC,oDAAD,CAAtB;;AAEA,UAAID,MAAJ,EAAY;AACV;AACA;AAEAE,QAAAA,MAAM,CAACC,IAAP,GACOC,IADP,CACY,UAAAC,UAAU,EAAI;AAClBA,UAAAA,UAAU,CACPC,OADH,CACW,UAAAC,SAAS,EAAI;AACpBL,YAAAA,MAAM,CAACM,MAAP,CAAcD,SAAd;AACD,WAHH;AAID,SANP;AAQAE,QAAAA,UAAU,CAAC,YAAM;AACfC,UAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACD,SAFS,EAEP,GAFO,CAAV;AAID;AAEF,KAxCkD;AAyCnDC,IAAAA,OAzCmD,qBAyCxC;AACTlB,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACD,KA3CkD;AA4CnDkB,IAAAA,KA5CmD,iBA4C5CA,MA5C4C,EA4CrC;AACZnB,MAAAA,OAAO,CAACmB,KAAR,CAAc,2CAAd,EAA2DA,MAA3D;AACAC,MAAAA,KAAK,CAACD,MAAD,CAAL;AACD;AA/CkD,GAA7C,CAAR;AAiDD;AAED;;;AAIA;;;AACA,IAAIE,MAAM,CAACC,SAAP,CAAiBC,UAAjB,KAAgC,IAApC,EAA0C;AACxCvB,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,C,CAED;;;AACA,IAAIoB,MAAM,CAACG,UAAP,CAAkB,4BAAlB,EAAgDC,OAApD,EAA6D;AAC3DzB,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD","sourcesContent":["/* eslint-disable no-console */\n\nimport {register} from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n\n      console.log('New content is available; please refresh.')\n\n      const update = confirm('Доступно обновление. Нажмите \"ОК\" для перезагрузки')\n\n      if (update) {\n        //localStorage.clear()\n        //sessionStorage.clear()\n\n        caches.keys()\n              .then(cacheNames => {\n                cacheNames\n                  .forEach(cacheName => {\n                    caches.delete(cacheName)\n                  })\n              })\n\n        setTimeout(() => {\n          location.reload(true)\n        }, 300)\n\n      }\n\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n      alert(error)\n    }\n  })\n}\n\n/**\n * Detecting if your app is launched from the home screen\n */\n\n// Safari\nif (window.navigator.standalone === true) {\n  console.log('safari display-mode is standalone')\n}\n\n// Other\nif (window.matchMedia('(display-mode: standalone)').matches) {\n  console.log('display-mode is standalone')\n}\n"]}]}