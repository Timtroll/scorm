{"remainingRequest":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/thread-loader/dist/cjs.js!/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/babel-loader/lib/index.js!/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/registerServiceWorker.js","dependencies":[{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/registerServiceWorker.js","mtime":1563202546367},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/cache-loader/dist/cjs.js","mtime":1563033657658},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/thread-loader/dist/cjs.js","mtime":1563033657872},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/babel-loader/lib/index.js","mtime":1563033651329}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\n/* eslint-disable no-console */\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(\"\".concat(process.env.BASE_URL, \"service-worker.js\"), {\n    ready: function ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered: function registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached: function cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound: function updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated: function updated() {\n      console.log('New content is available; please refresh.');\n      var update = confirm('Доступно обновление. Нажмите \"ОК\" для перезагрузки');\n\n      if (update) {\n        //localStorage.clear()\n        //sessionStorage.clear()\n        caches.keys().then(function (cacheNames) {\n          cacheNames.forEach(function (cacheName) {\n            caches.delete(cacheName);\n          });\n        });\n        setTimeout(function () {\n          location.reload(true);\n        }, 300);\n      }\n    },\n    offline: function offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error: function error(_error) {\n      console.error('Error during service worker registration:', _error);\n      alert(_error);\n    }\n  });\n}\n/**\n * Detecting if your app is launched from the home screen\n */\n// Safari\n\n\nif (window.navigator.standalone === true) {\n  console.log('safari display-mode is standalone');\n} // Other\n\n\nif (window.matchMedia('(display-mode: standalone)').matches) {\n  console.log('display-mode is standalone');\n}",null]}