{"remainingRequest":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/babel-loader/lib/index.js!/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/store.js","dependencies":[{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/store.js","mtime":1563371906802},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/cache-loader/dist/cjs.js","mtime":1563033657658},{"path":"/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/node_modules/babel-loader/lib/index.js","mtime":1563033651329}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      isAuthorised: false\n    }\n  },\n  mutations: {\n    setAuth: function setAuth(state, payload) {\n      state.user.isAuthorised = payload;\n    }\n  },\n  actions: {\n    //setAuthorised ({commit, stat}) {},\n    setAuth: function setAuth(_ref, payload) {\n      var dispatch = _ref.dispatch;\n      dispatch('setAuth', payload);\n      sessionStorage.setItem('auth', 'true');\n    }\n  }\n});",{"version":3,"sources":["/Volumes/MacOS/Files/GitLab/SCORM/scorm-admin/src/store.js"],"names":["Vue","Vuex","use","Store","state","user","isAuthorised","mutations","setAuth","payload","actions","dispatch","sessionStorage","setItem"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAM;AACTC,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AADG,GADiB;AAO5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OADS,mBACAJ,KADA,EACOK,OADP,EACgB;AAACL,MAAAA,KAAK,CAACC,IAAN,CAAWC,YAAX,GAA0BG,OAA1B;AAAkC;AADnD,GAPiB;AAU5BC,EAAAA,OAAO,EAAI;AACT;AACAF,IAAAA,OAFS,yBAEYC,OAFZ,EAEqB;AAAA,UAApBE,QAAoB,QAApBA,QAAoB;AAC5BA,MAAAA,QAAQ,CAAC,SAAD,EAAYF,OAAZ,CAAR;AACAG,MAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+B,MAA/B;AACD;AALQ;AAViB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state:     {\n    user: {\n      isAuthorised: false\n    }\n\n  },\n  mutations: {\n    setAuth (state, payload) {state.user.isAuthorised = payload}\n  },\n  actions:   {\n    //setAuthorised ({commit, stat}) {},\n    setAuth ({dispatch}, payload) {\n      dispatch('setAuth', payload)\n      sessionStorage.setItem('auth', 'true')\n    }\n\n  }\n})\n"]}]}